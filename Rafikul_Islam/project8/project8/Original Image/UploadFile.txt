   public virtual string UploadFiles(object obj)
        {
            gname = db.RequestInfos.Where(u => u.UserName.Equals(User.Identity.Name))
                    .Select(s => s.GroupName).SingleOrDefault();
            var hContext = GlobalHost.ConnectionManager.GetHubContext<MyHub>();
            var length = Request.ContentLength;
            var bytes = new byte[length];
            if (bytes.Length <= 15728640)
            {
                Request.InputStream.Read(bytes, 0, length);

                var fileName = Request.Headers["X-File-Name"];
                var fileSize = Request.Headers["X-File-Size"];
                var fileType = Request.Headers["X-File-Type"];
                var ipath = "/Images/" + fileName;
                var saveToFileLoc = HttpContext.Server.MapPath("~/Images/") + fileName;
                var original = HttpContext.Server.MapPath("~/Original Image/") + fileName;

                var fileStream = new FileStream(original, FileMode.Create, FileAccess.ReadWrite);
                fileStream.Write(bytes, 0, length);
                fileStream.Close();

                string ext = Path.GetExtension(fileName);
                if(ext ==".jpg"||ext ==".png"||ext ==".jpeg"||ext ==".gif")
               {
                
                FileInfo gallaryFileInfo = new FileInfo(original);
                if (gallaryFileInfo.Name != null)
                {
                    Bitmap originalImage = new Bitmap(gallaryFileInfo.FullName);
                    double photoRatio = (double)originalImage.Height / (double)originalImage.Width;
                    int width = 120;
                    int height = (int)(width * photoRatio);
                    Size photosize = new Size(width, height);
                    Bitmap resizePhoto = new Bitmap(originalImage, photosize);
                    resizePhoto.SetResolution(72, 72);
                    resizePhoto.Save(saveToFileLoc);
                    resizePhoto.Dispose();
                    originalImage.Dispose();
                    hContext.Clients.Group(gname).received(User.Identity.Name, ipath, "files");
                }
                }                  
                else
                {

                    hContext.Clients.Group(gname).received(User.Identity.Name, "/Original Image/" + fileName, "files");
                }
                    db.MessageInfos.Add(new MessageInfo
                    {
                        MessageBody = ipath,
                        PostDateTime = DateTime.Now.ToString(),
                        UserName = User.Identity.Name

                    });

                    if (db.SaveChanges() > 0)
                    {
                        //hContext.Groups.Add()
                      
                        //hContext.Clients.All.receivedMessage("SERVER", ipath);
                        //hContext.Clients.AllExcept().receivedMessage("SERVER", ipath);
                    }
                

                return string.Format("{0} bytes uploaded", bytes.Length);
            }
            return string.Format("{0} bytes limit exceed", bytes.Length);
        }